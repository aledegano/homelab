apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: grafana-custom
        - name: datasources-volume
          configMap:
            name: grafana-datasources
        - name: dashboards-providers-volume
          configMap:
            name: grafana-dashboards-providers
        - name: dashboards-volume
          configMap:
            name: grafana-dashboards
      containers:
      - name: grafana
        image: grafana/grafana:7.3.4
        ports:
        - containerPort: 3000
        volumeMounts:
          - name: config-volume
            mountPath: /etc/grafana
          - name: datasources-volume
            mountPath: /etc/grafana/provisioning/datasources
          - name: dashboards-providers-volume
            mountPath: /etc/grafana/provisioning/dashboards
          - name: dashboards-volume
            mountPath: /var/lib/grafana/dashboards
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-admin-credentials
              key: username
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-admin-credentials
              key: password
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_NAME
          value: "Main Org."
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
